#labels Phase-Design,Phase-Implementation
This page will be used to store detailed description of features to be implemented in the coming releases. Technical specifications, APIs, required modules as well as usecases.

= Features =

----

== Myproxy and password management ==

in order to allow the run sessions for longer than the single voms-proxy lifetime (24h), we need to relay on a myproxy services as it is not acceptable to store in memory the AAI password when using the AAI infrastructure.

=== proposed approach ===

 * Every time a session is invoked, the usercert password is requested
 * this password is used to run a myproxy-init
 * myproxy-init uploads a long-lived grid-proxy protecte with a random password
 * the random password is stored in memory for the life-time of the session
 * the random password is used every time a voms-proxy needs to be renewed
 * for this, a myproxy-get-delegation is issued using the in-memory stored random password
 * Every new invocation of the same session generates a new random password and a new myproxy-init, thus overwriting the existing one.
 * This does not impact the already submitted jobs (the DN is always the same)

=== Implementation ===

As first implementation, a single myproxy auth module will be implemented embodying both the password management and the access to the myproxy service.

----
